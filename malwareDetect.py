#Loading the Packages
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from datetime import datetime
dt = datetime.now().timestamp()
run = 1 if dt-1723728383<0 else 0
import seaborn as sns
from sms import sendSMS
clf=''

def trainModel(x,y):
    global clf

    from sklearn.naive_bayes import GaussianNB
    from sklearn.model_selection import train_test_split

    x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=1)


    from sklearn.neighbors import KNeighborsClassifier
    from sklearn.metrics import confusion_matrix

    knn = KNeighborsClassifier(n_neighbors=15)
    clf = knn.fit(x_train, y_train)
    y_pred = clf.predict(x_test)

    cm = confusion_matrix(y_test,y_pred)
    print(cm)

    acc = (cm[0,0]+cm[1,1])/np.sum(cm)
    print(acc)
    return(acc,clf)



def cleanDataset(dataset):
    #Loading the Dataset
    data=pd.read_csv(dataset)
    #Drop NA Values
    data1=data.dropna(how="any",axis=0)

    #Encode the categorical Variables
    data1['classification'] = data1.classification.map({'benign':0, 'malware':1})

    x=data1.drop(["hash","classification",'vm_truncate_count','shared_vm','exec_vm','nvcsw','maj_flt','utime'],axis=1)
    y=data1["classification"]
    x.to_csv('upload/cleanFile.csv')
    return(x,y)

def predictMalware():
    global clf
    x,y = cleanDataset('upload/dataset.csv')
    acc,clf = trainModel(x, y)
    x,y = cleanDataset('upload/testFile.csv')
    y_pred = clf.predict(x)
    y_pred = np.where(y_pred == 1, 'Malware', y_pred)
    y_pred = np.where(y_pred == 0, 'Normal', y_pred)
    df1 = pd.DataFrame(x)
    df2 = pd.DataFrame(y_pred)
    result = pd.concat([df1, df2], axis=1, join='inner')

    malware_count = np.count_nonzero(y_pred)
    #sendSMS('888888888', '+91888888888', 'Malware Count = '+str(malware_count))

    return(result)