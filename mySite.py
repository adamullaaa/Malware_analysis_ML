# import the necessary packages
from flask import Flask, render_template, redirect, url_for, request,session,Response,jsonify
from werkzeug.utils import secure_filename
import os
import pandas as pd
from malwareDetect import *

app = Flask(__name__)

app.secret_key = '1234'
app.config["CACHE_TYPE"] = "null"
app.config['SEND_FILE_MAX_AGE_DEFAULT'] = 0

@app.route('/home', methods=['GET', 'POST'])
def home():
	return redirect(url_for('input'))

@app.route('/', methods=['GET', 'POST'])
def input():
	error = None
	if request.method == 'POST':
		if request.form['username'] != 'admin' or request.form['password'] != 'admin':
			error = 'Invalid Credentials. Please try again.'
		else:
			return redirect(url_for('upload'))

	return render_template('input.html', error=error)


@app.route('/upload', methods=['GET', 'POST'])
def upload():
    if request.method == 'POST':
        # Handle file upload
        savepath = 'upload/'
        uploaded_file = request.files['file']
        
        if uploaded_file:
            filename = secure_filename('dataset.csv')
            uploaded_file.save(os.path.join(savepath, filename))
            return jsonify(status="success", message="Dataset Uploaded!")
        
        return jsonify(status="error", message="No file provided")
    else:
        # Render the upload page
        return render_template('upload.html')
	

@app.route('/dataset', methods=['GET', 'POST'])
def dataset():
	df = pd.read_csv('upload/dataset.csv')
	return render_template('dataset.html', tables=[df.head(10).to_html(classes='w3-table-all w3-hoverable')], titles=df.columns.values)

@app.route('/clean', methods=['GET', 'POST'])
def clean():
	x,y=cleanDataset('upload/dataset.csv')
	df = pd.read_csv('upload/cleanFile.csv')
	return render_template('clean.html', tables=[df.head(10).to_html(classes='w3-table-all w3-hoverable')], titles=df.columns.values)

@app.route('/result', methods=['GET', 'POST'])
def result():
	if request.method == 'POST':
		if request.form['sub']=='Upload':
			savepath = r'upload/'
			dataset = request.files['dataset']
			dataset.save(os.path.join(savepath,(secure_filename('testFile.csv'))))
			return render_template('result.html',mgs="File Uploaded..!!!")
		if request.form['sub']=='Test':
			result = predictMalware()
			result.to_csv('upload/result.csv')
			df = pd.read_csv('upload/Result.csv')
			return render_template('result.html', tables=[df.head(10).to_html(classes='w3-table-all w3-hoverable')], titles=df.columns.values)
	return render_template('result.html')
	
# No caching at all for API endpoints.
@app.after_request
def add_header(response):
	# response.cache_control.no_store = True
	response.headers['Cache-Control'] = 'no-store, no-cache, must-revalidate, post-check=0, pre-check=0, max-age=0'
	response.headers['Pragma'] = 'no-cache'
	response.headers['Expires'] = '-1'
	return response


if __name__ == '__main__' and run:
	app.run(host='localhost', debug=True, threaded=True)
